#!/usr/bin/env bash

mkdir -p .release
pushd .release &> /dev/null

echo -e "\e[34mSetup tooling...\e[0m"
if [[ ! -d bin/.git ]] ; then
    echo "Cloning..."
    git clone --quiet git@github.com:msgphp/git-subtree-sync.git bin
fi

git -C bin pull

echo -e "\e[34mSynchronizing source...\e[0m"
if [[ ! -d main/.git ]] ; then
    rm -rf .gitsubtree main subtrees
    mkdir main subtrees
    echo "Cloning..."
    git clone --quiet git@github.com:msgphp/msgphp.git main
fi

git -C main fetch --tags
git -C main pull

if [[ ! -f .gitsubtree ]] ; then
    PACKAGES=""
    for PACKAGE_DIR in $(find main/src/*/composer.json -type f) ; do
        PACKAGE_NAME=$(grep -E "^\s*\"name\"\s*:\s*\"msgphp\/([^\"]+)\"\s*,\s*$" $PACKAGE_DIR)
        if [[ ! -z "$PACKAGE_NAME" ]] ; then
            PACKAGE_NAME=$(echo $PACKAGE_NAME | sed -e "s/^\s*\"name\":\s*\"msgphp\///" -e "s/\"\s*,\s*$//")
            PACKAGE_PATH="src/$(basename $(dirname $PACKAGE_DIR))/"
            echo -e "\e[34mFound package \"msgphp/${PACKAGE_NAME}\" at \"${PACKAGE_PATH}\"\e[0m"
            PACKAGES="$PACKAGES    [\"${PACKAGE_NAME}\"]=\"${PACKAGE_PATH}\""$'\n'
        fi
    done

    cat >.gitsubtree <<EOL
REMOTE_BASE_URL=git@github.com:msgphp
MONOLITH_REPO_ROOT=\$(realpath main)
SUBTREE_REPO_ROOT=\$(realpath subtrees)
PREFIX_DIRS=(
$PACKAGES)
EOL
fi

echo -en "\e[34mAll good! Ready to release? [yN]\e[0m "
read answer
if [[ ! $answer =~ ^y|Y|yes|YES$ ]] ; then
    echo "Aborted!"
    exit 1
fi

pushd main &> /dev/null
echo -e "\e[34mSetup environment...\e[0m"
bin/composer update --prefer-dist --no-interaction --no-suggest --prefer-stable &> /dev/null
bin/phpunit install &> /dev/null
bin/phpunit
if [[ $? -eq 0 ]] ; then TESTS_OK=1; else TESTS_OK=0; fi
popd &> /dev/null

if [[ $TESTS_OK -eq 0 ]] ; then
    echo -en "\e[34mTests failing! Release anyway? [yN]\e[0m "
    read answer
    if [[ ! $answer =~ ^y|Y|yes|YES$ ]] ; then
        echo "Aborted!"
        exit 1
    fi
fi

bin/git-subtree-sync.sh

popd &> /dev/null
